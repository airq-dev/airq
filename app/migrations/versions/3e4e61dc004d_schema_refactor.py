"""Schema refactor

Revision ID: 3e4e61dc004d
Revises: 1c0739669926
Create Date: 2020-09-16 13:55:04.683017

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3e4e61dc004d'
down_revision = '1c0739669926'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('clients', sa.Column('alerts_disabled_at', sa.Integer(), nullable=False))
    op.add_column('clients', sa.Column('last_activity_at', sa.Integer(), nullable=False))
    op.add_column('clients', sa.Column('last_alert_sent_at', sa.Integer(), nullable=False))
    op.add_column('clients', sa.Column('last_pm25', sa.Float(), nullable=True))
    op.add_column('clients', sa.Column('num_alerts_sent', sa.Integer(), nullable=False))
    op.add_column('clients', sa.Column('zipcode_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_clients_alerts_disabled_at'), 'clients', ['alerts_disabled_at'], unique=False)
    op.create_index(op.f('ix_clients_last_activity_at'), 'clients', ['last_activity_at'], unique=False)
    op.create_index(op.f('ix_clients_last_alert_sent_at'), 'clients', ['last_alert_sent_at'], unique=False)
    op.create_foreign_key('clients_zipcode_id_fkey', 'clients', 'zipcodes', ['zipcode_id'], ['id'])
    op.add_column('zipcodes', sa.Column('max_sensor_distance', sa.Float(), nullable=False))
    op.add_column('zipcodes', sa.Column('min_sensor_distance', sa.Float(), nullable=False))
    op.add_column('zipcodes', sa.Column('num_sensors', sa.Integer(), nullable=False))
    op.add_column('zipcodes', sa.Column('pm25', sa.Float(), nullable=False))
    op.add_column('zipcodes', sa.Column('pm25_updated_at', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_zipcodes_pm25'), 'zipcodes', ['pm25'], unique=False)
    op.create_index(op.f('ix_zipcodes_pm25_updated_at'), 'zipcodes', ['pm25_updated_at'], unique=False)
    # ### end Alembic commands ###
    
    # Data migration - write subscriptions data to clients table
    conn = op.get_bind()
    res = conn.execute(
        "SELECT zipcode_id, client_id, last_executed_at, last_pm25, disabled_at FROM clients"
    )
    for zipcode_id, client_id, last_executed_at, last_pm25, disabled_at in res.fetchall():
        res = conn.execute(
            "UPDATE clients SET zipcode_id=%s, last_pm25=%s, last_alert_sent_at=%s, alerts_disabled_at=%s WHERE client_id=%s",
            zipcode_id,
            last_pm25,
            last_executed_at,
            disabled_at,
            client_id
        )




def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_zipcodes_pm25_updated_at'), table_name='zipcodes')
    op.drop_index(op.f('ix_zipcodes_pm25'), table_name='zipcodes')
    op.drop_column('zipcodes', 'pm25_updated_at')
    op.drop_column('zipcodes', 'pm25')
    op.drop_column('zipcodes', 'num_sensors')
    op.drop_column('zipcodes', 'min_sensor_distance')
    op.drop_column('zipcodes', 'max_sensor_distance')
    op.drop_constraint('clients_zipcode_id_fkey', 'clients', type_='foreignkey')
    op.drop_index(op.f('ix_clients_last_alert_sent_at'), table_name='clients')
    op.drop_index(op.f('ix_clients_last_activity_at'), table_name='clients')
    op.drop_index(op.f('ix_clients_alerts_disabled_at'), table_name='clients')
    op.drop_column('clients', 'zipcode_id')
    op.drop_column('clients', 'num_alerts_sent')
    op.drop_column('clients', 'last_pm25')
    op.drop_column('clients', 'last_alert_sent_at')
    op.drop_column('clients', 'last_activity_at')
    op.drop_column('clients', 'alerts_disabled_at')
    # ### end Alembic commands ###
